# add_executable(expr expr.cpp)
# target_link_libraries(expr ${EXTRA_LIBS})
# add_test(expr ${CMAKE_CURRENT_BINARY_DIR}/expr)
# add_executable(normalizer normalizer.cpp)
# target_link_libraries(normalizer ${EXTRA_LIBS})
# add_test(normalizer ${CMAKE_CURRENT_BINARY_DIR}/normalizer)
# set_tests_properties(normalizer PROPERTIES ENVIRONMENT "LEAN_PATH=${LEAN_BINARY_DIR}/shell")
# add_executable(threads threads.cpp)
# target_link_libraries(threads ${EXTRA_LIBS})
# add_test(threads ${CMAKE_CURRENT_BINARY_DIR}/threads)
# set_tests_properties(threads PROPERTIES ENVIRONMENT "LEAN_PATH=${LEAN_BINARY_DIR}/shell")
# add_executable(free_vars free_vars.cpp)
# target_link_libraries(free_vars ${EXTRA_LIBS})
# add_test(free_vars ${CMAKE_CURRENT_BINARY_DIR}/free_vars)
add_executable(level level.cpp)
target_link_libraries(level ${EXTRA_LIBS})
add_test(level ${CMAKE_CURRENT_BINARY_DIR}/level)
# add_executable(replace replace.cpp)
# target_link_libraries(replace ${EXTRA_LIBS})
# add_test(replace ${CMAKE_CURRENT_BINARY_DIR}/replace)
# add_executable(type_checker type_checker.cpp)
# target_link_libraries(type_checker ${EXTRA_LIBS})
# add_test(type_checker ${CMAKE_CURRENT_BINARY_DIR}/type_checker)
# set_tests_properties(type_checker PROPERTIES ENVIRONMENT "LEAN_PATH=${LEAN_BINARY_DIR}/shell")
# add_executable(environment environment.cpp)
# target_link_libraries(environment ${EXTRA_LIBS})
# add_test(environment ${CMAKE_CURRENT_BINARY_DIR}/environment)
# set_tests_properties(environment PROPERTIES ENVIRONMENT "LEAN_PATH=${LEAN_BINARY_DIR}/shell")
# add_executable(occurs occurs.cpp)
# target_link_libraries(occurs ${EXTRA_LIBS})
# add_test(occurs ${CMAKE_CURRENT_BINARY_DIR}/occurs)
# add_executable(metavar metavar.cpp)
# target_link_libraries(metavar ${EXTRA_LIBS})
# add_test(metavar ${CMAKE_CURRENT_BINARY_DIR}/metavar)
# set_tests_properties(metavar PROPERTIES ENVIRONMENT "LEAN_PATH=${LEAN_BINARY_DIR}/shell")
# add_executable(instantiate instantiate.cpp)
# target_link_libraries(instantiate ${EXTRA_LIBS})
# add_test(instantiate ${CMAKE_CURRENT_BINARY_DIR}/instantiate)
# add_executable(universe_constraints universe_constraints.cpp)
# target_link_libraries(universe_constraints ${EXTRA_LIBS})
# add_test(universe_constraints ${CMAKE_CURRENT_BINARY_DIR}/universe_constraints)
